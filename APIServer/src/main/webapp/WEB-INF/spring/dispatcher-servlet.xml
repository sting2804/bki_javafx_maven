<?xml version='1.0' encoding='UTF-8' ?>
<!-- was: <?xml version="1.0" encoding="UTF-8"?> -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
          http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <import resource="dao-config.xml"/>
    <context:component-scan base-package="com.privat.bki.apiserver.spring"/>
    <mvc:resources mapping="/resources/**" location="/pages/"/>
    <bean id="objectMapper" class="com.fasterxml.jackson.databind.ObjectMapper"/>
    <bean id="jacksonConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"
          p:objectMapper-ref="objectMapper"/>
    <bean id="jaxb2XmlConverter"
          class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter"/>
    <bean id="jaxb2CollectionConverter"
          class="org.springframework.http.converter.xml.Jaxb2CollectionHttpMessageConverter"/>
    <mvc:annotation-driven content-negotiation-manager="cnManager">
        <mvc:message-converters>
            <ref bean="jacksonConverter"/>
            <ref bean="jaxb2XmlConverter"/>
            <ref bean="jaxb2CollectionConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          p:order="2"
          p:viewClass="org.springframework.web.servlet.view.JstlView"
          p:prefix="pages/"/>

    <!--
        View resolver that delegates to other view resolvers based on the content type
    -->
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver"
          p:contentNegotiationManager-ref="cnManager"
          p:viewResolvers-ref="viewResolver"
    />

    <!--
        Setup a simple strategy:
           1. Only path extension is taken into account, Accept headers are ignored.
           2. Return json by default when not sure.
     -->
    <bean id="cnManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean"
        p:ignoreAcceptHeader="true"
        p:defaultContentType="application/json"
    />
</beans>
